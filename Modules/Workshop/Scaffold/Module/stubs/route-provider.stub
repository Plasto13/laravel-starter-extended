<?php

namespace Modules\$MODULE$\Providers;

use Illuminate\Support\Facades\Route;
use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;
use Mcamara\LaravelLocalization\Facades\LaravelLocalization;

class RouteServiceProvider extends ServiceProvider
{
    /**
     * The root namespace to assume when generating URLs to actions.
     * @var string
     */
    protected $namespace = 'Modules\$MODULE$\Http\Controllers';
    
    protected $adminNamespace = 'Modules\$MODULE$\Http\Controllers\Admin';

    protected $apiNamespace = 'Modules\$MODULE$\Http\Controllers\Api';

     /**
     * Called before routes are registered.
     *
     * Register any model bindings or pattern based filters.
     *
     * @return void
     */
    public function boot()
    {
        parent::boot();
    }

    /**
     * Define the routes for the application.
     *
     * @return void
     */
    public function map()
    {
        $this->mapApiRoutes();

        $this->mapAdminRoutes();
        
        $this->mapWebRoutes();
    }

    /**
     * Define the "web" routes for the application.
     *
     * These routes all receive session state, CSRF protection, etc.
     *
     * @return void
     */
    protected function mapAdminRoutes()
    {
        Route::middleware([
                'web',
                'localeSessionRedirect', 
                'localizationRedirect', 
                'localeViewPath'
            ])
            ->namespace($this->adminNamespace)
            ->prefix(LaravelLocalization::setLocale())
            ->group(module_path('$MODULE$', '/Http/backendRoutes.php'));
    }

    /**
     * Define the "web" routes for the application.
     *
     * These routes all receive session state, CSRF protection, etc.
     *
     * @return void
     */
    protected function mapWebRoutes()
    {
        // Route::namespace($this->namespace)
        //     ->group(module_path('$MODULE$', '/Http/frontendRoutes.php'));
    }

    /**
     * Define the "api" routes for the application.
     *
     * These routes are typically stateless.
     *
     * @return void
     */
    protected function mapApiRoutes()
    {
        Route::prefix('api')
            ->middleware('api')
            ->namespace($this->apiNamespace)
            ->group(module_path('$MODULE$', '/Http/apiRoutes.php'));
    }
}
