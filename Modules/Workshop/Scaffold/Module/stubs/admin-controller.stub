<?php

namespace Modules\$MODULE_NAME$\Http\Controllers\Backend;

use Log;
use Illuminate\Support\Str;
use Illuminate\Session\Store;
use Illuminate\Routing\Controller;
use Nwidart\Modules\Facades\Module;
use Illuminate\Support\Facades\Auth;
use Modules\$MODULE_NAME$\Entities\$CLASS_NAME$;
use Modules\$MODULE_NAME$\DataTables\$CLASS_NAME$DataTable;
use Modules\$MODULE_NAME$\Repositories\$CLASS_NAME$Repository;
use Modules\$MODULE_NAME$\Http\Requests\Create$CLASS_NAME$Request;
use Modules\$MODULE_NAME$\Http\Requests\Update$CLASS_NAME$Request;

class $CLASS_NAME$Controller extends Controller
{

    /**
     * @var $CLASS_NAME$Repository
     */
    private $$LOWERCASE_CLASS_NAME$;

    public function __construct($CLASS_NAME$Repository $$LOWERCASE_CLASS_NAME$)
    {
        $this->$LOWERCASE_CLASS_NAME$ = $$LOWERCASE_CLASS_NAME$;
    }

    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index($CLASS_NAME$DataTable $dataTable)
    {
        Log::info(label_case('$MODULE_NAME$  -  $CLASS_NAME$  List') . ' | User:' . Auth::user()->name . '(ID:' . Auth::user()->id . ')');
        return $dataTable->render('$LOWERCASE_MODULE_NAME$::backend.$PLURAL_LOWERCASE_CLASS_NAME$.index', ['table' => $dataTable]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create()
    {
        Log::info(label_case('$MODULE_NAME$ $CLASS_NAME$  Create') . ' | User:' . Auth::user()->name . '(ID:' . Auth::user()->id . ')');
        return view('$LOWERCASE_MODULE_NAME$::backend.$PLURAL_LOWERCASE_CLASS_NAME$.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  Create$CLASS_NAME$Request $request
     * @return Response
     */
    public function store(Create$CLASS_NAME$Request $request)
    {
        $saved = $this->$LOWERCASE_CLASS_NAME$->create($request->all());
        Log::info(label_case('$MODULE_NAME$ $CLASS_NAME$  Store ID: ') .$saved->id. ' | User:' . Auth::user()->name . '(ID:' . Auth::user()->id . ')');

        return redirect()->route('admin.$LOWERCASE_MODULE_NAME$.$LOWERCASE_CLASS_NAME$.index')
            ->with('growl', [__('core::core.messages.resource created'), 'success']);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  $CLASS_NAME$ $$LOWERCASE_CLASS_NAME$
     * @return Response
     */
    public function edit($CLASS_NAME$ $$LOWERCASE_CLASS_NAME$)
    {
        Log::info(label_case('$MODULE_NAME$ - $CLASS_NAME$ Store ID: ') .$$LOWERCASE_CLASS_NAME$->id. ' | User:' . Auth::user()->name . '(ID:' . Auth::user()->id . ')');
        return view('$LOWERCASE_MODULE_NAME$::backend.$PLURAL_LOWERCASE_CLASS_NAME$.edit', compact('$LOWERCASE_CLASS_NAME$'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  $CLASS_NAME$ $$LOWERCASE_CLASS_NAME$
     * @param  Update$CLASS_NAME$Request $request
     * @return Response
     */
    public function update($CLASS_NAME$ $$LOWERCASE_CLASS_NAME$, Update$CLASS_NAME$Request $request)
    {
        $saved = $this->$LOWERCASE_CLASS_NAME$->update($$LOWERCASE_CLASS_NAME$, $request->all());
        Log::info(label_case('$MODULE_NAME$ - $CLASS_NAME$ Update ID: ') .$saved->id. ' | User:' . Auth::user()->name . '(ID:' . Auth::user()->id . ')');

        return redirect()->route('admin.$LOWERCASE_MODULE_NAME$.$LOWERCASE_CLASS_NAME$.index')
            ->with('growl', [__('core::core.messages.resource updated'), 'success']);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  $CLASS_NAME$ $$LOWERCASE_CLASS_NAME$
     * @return Response
     */
    public function destroy($CLASS_NAME$ $$LOWERCASE_CLASS_NAME$)
    {
        Log::info(label_case('$MODULE_NAME$ - $CLASS_NAME$ Destroy ID: ') .$$LOWERCASE_CLASS_NAME$->id. ' | User:' . Auth::user()->name . '(ID:' . Auth::user()->id . ')');
        return response()->json(['success' => $this->$LOWERCASE_CLASS_NAME$->destroy($$LOWERCASE_CLASS_NAME$) ?? false]);
    }
}
