<?php

namespace Modules\$MODULE_NAME$\Http\Controllers\Api;

use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Yajra\DataTables\Datatables;
use Illuminate\Routing\Controller;
use Modules\$MODULE_NAME$\Entities\$CLASS_NAME$;


class $CLASS_NAME$Controller extends Controller
{


    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function datatables(Request $request)
    {
        return DataTables::of($CLASS_NAME$::query()) 
                    ->editColumn('hall_id', function(Point $point){
                        return $$LOWERCASE_MODULE_NAME$->equipment->line->hall->equipment_name;
                    })
                    ->editColumn('line_id', function(Point $point){
                        return $$LOWERCASE_MODULE_NAME$->equipment->line->equipment_name;
                    })
                    ->editColumn('equipment_id', function(Point $point){
                        return $$LOWERCASE_MODULE_NAME$->equipment->equipment_name;
                    })
                    ->filter(function ($query) use ($request) {
                        if ($name = $request->get('hall')) {
                                    $query->whereHas('equipment.line.hall', function ($q) use ($name) {
                                        $q->where('equipment_name', 'like', "%$name%");
                                    });        
                        }
                        if ($name = $request->get('line')) {
                            $query->whereHas('equipment.line', function ($q) use ($name) {
                                        $q->where('equipment_name', 'like', "%$name%");
                                    });
                        }
                        if ($name = $request->get('equipment')) {
                            $query->whereHas('equipment', function ($q) use ($name) {
                                        $q->where('equipment_name', 'like', "%$name%");
                                    });
                        }
                        if ($name = $request->get('$LOWERCASE_CLASS_NAME$')) {
                            $query->whereHas('translations', function ($q) use ($name) {
                                        $q->where('title', 'like', "%$name%");
                                    });
                        }
                    })
                    ->editColumn('action', '$LOWERCASE_MODULE_NAME$::admin.$PLURAL_LOWERCASE_CLASS_NAME$.columns.action')
                    ->rawColumns(['action'])
                    ->toJson();
    }

}
